
package es.ark.web.taglib;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.tagext.TagSupport;
import org.apache.log4j.Logger;
import org.apache.struts.util.ResponseUtils;

@SuppressWarnings({"deprecation"})
public class FunctionAriTag extends TagSupport
{

    public FunctionAriTag()
    {
    }

    public int doStartTag()
        throws JspException
    {
        ResponseUtils.write(pageContext, renderAnexoElement());
        return 2;
    }

    protected String renderAnexoElement()
        throws JspException
    {
        logger.debug("FunctionAriTag:renderAnexoElement ...: Inicio");
        logger.debug("FunctionAriTag:renderAnexoElement ...: Creaci\363n de los elementos necesarios para la paginaci\363n");
        StringBuffer resultado = new StringBuffer("<script>");
        resultado.append("function pintarGridPaginado(url,name,columnNumber,columnHeader,table,obj,id,idnumber,countid,urlError,functionGrupoRemonteInverso,nPaginacion,tipoPaginacion) {");
        resultado.append("var actionGrid= url.substring(url.indexOf(\"/\")+1);");
        resultado.append("actionGrid = actionGrid.substring(actionGrid.indexOf(\"/\")+1);");
        resultado.append("if (findSecurityElement(document.getElementById(\"actions\").value,actionGrid)) {");
        resultado.append("if (tipoPaginacion == 2) {");
        resultado.append("table.setURL(url+\"?offset=\" + nPaginacion);");
        resultado.append("} else {");
        resultado.append("table.setURL(url);");
        resultado.append("}");
        resultado.append("table.setAsync(true);");
        resultado.append("table.request();");
        resultado.append("obj.setId(name);");
        resultado.append("table.response1 = table.response;");
        resultado.append("table.response = function (data) {");
        resultado.append("if (data == \"ERROR\") {");
        resultado.append("window.location=urlError;");
        resultado.append("} else {");
        resultado.append("this.response1(data);");
        resultado.append("if (tipoPaginacion == 1) {");
        resultado.append("document.getElementById(\"total\").value = \"1 - \" +  nPaginacion + \" / \" + this.getCount();");
        resultado.append("}");
        resultado.append("obj.clearScrollModel();");
        resultado.append("}");
        resultado.append("};");
        resultado.append("obj.setColumnCount(columnNumber);");
        resultado.append("obj.setHeaderText(columnHeader);");
        resultado.append("obj.setSelectorVisible(true);");
        resultado.append("obj.setSelectorWidth(25);");
        resultado.append("obj.setCellModel(table);");
        resultado.append("obj.setVirtualMode(false);");
        resultado.append("obj.setCellTooltip(function(col, row){return this.getCellText(col, row)});");
        resultado.append("obj.setSelectionMode(\"multi-row\");");
        resultado.append("obj.onSelectedRowsChanged = function(rowIndicesArray){");
        resultado.append("var count = countSelectRows(rowIndicesArray);");
        resultado.append("if (document.getElementById(\"deleteButton\") != null) {");
        resultado.append("document.getElementById(\"deleteButton\").disabled = false;");
        resultado.append("document.getElementById(\"deleteButton\").className=\"botonesAri\";");
        resultado.append("}");
        resultado.append("document.getElementById(\"padreValores\").value = rowIndicesArray;");
        resultado.append("if (count == 0) {");
        resultado.append("if (document.getElementById(\"deleteButton\") != null) {");
        resultado.append("document.getElementById(\"deleteButton\").disabled = true;");
        resultado.append("document.getElementById(\"deleteButton\").className=\"botonesAri-disabled\";");
        resultado.append("}");
        resultado.append("}");
        resultado.append("if (count == 1) {");
        resultado.append("if (document.getElementById(\"updateClicked\") != null) {");
        resultado.append("document.getElementById(\"updateClicked\").disabled=false;");
        resultado.append("document.getElementById(\"updateClicked\").className=\"botonesAri\";");
        resultado.append("}");
        resultado.append("if (document.getElementById(\"detalleClicked\") != null) {");
        resultado.append("document.getElementById(\"detalleClicked\").disabled=false;");
        resultado.append("document.getElementById(\"detalleClicked\").className=\"botonesAri\";");
        resultado.append("}");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("document.getElementById(id[x]).value =this.getCellText(idnumber[x],rowIndicesArray);");
        resultado.append("}");
        resultado.append("} else {");
        resultado.append("if (document.getElementById(\"updateClicked\") != null) {");
        resultado.append("document.getElementById(\"updateClicked\").disabled=true;");
        resultado.append("document.getElementById(\"updateClicked\").className=\"botonesAri-disabled\";");
        resultado.append("}");
        resultado.append("if (document.getElementById(\"detalleClicked\") != null) {");
        resultado.append("document.getElementById(\"detalleClicked\").disabled=true;");
        resultado.append("document.getElementById(\"detalleClicked\").className=\"botonesAri-disabled\";");
        resultado.append("}");
        resultado.append("var str = \"\" + rowIndicesArray;");
        resultado.append("var count = new Array();");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("count[x]=\"\";");
        resultado.append("}");
        resultado.append("var posicion = 0;");
        resultado.append("while (str!= \"\") {");
        resultado.append("posicion = str.indexOf(\",\");");
        resultado.append("if (posicion == -1) {");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("if (count[x]==\"\") {");
        resultado.append("count[x] = this.getCellText(idnumber[x],str);");
        resultado.append("} else {");
        resultado.append("count[x] = count[x] + \",\" + this.getCellText(idnumber[x],str);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("str = \"\";");
        resultado.append("} else {");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("if (count[x]==\"\") {");
        resultado.append("count[x] = this.getCellText(idnumber[x],str.substring(0,posicion));");
        resultado.append("} else {");
        resultado.append("count[x] = count[x] + \",\" + this.getCellText(idnumber[x],str.substring(0,posicion));");
        resultado.append("}");
        resultado.append("}");
        resultado.append("str = str.substring(posicion+1);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("document.getElementById(id[x]).value = count[x];");
        resultado.append("}");
        resultado.append("}");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("document.getElementById(id[x] + \"_varios\").value =document.getElementById(id[x]).value;");
        resultado.append("}");
        resultado.append("if (document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\") {");
        resultado.append("for(var j=0;j<functionGrupoRemonteInverso.length;j++){");
        resultado.append("eval(functionGrupoRemonteInverso[j]);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("document.write(obj);");
        resultado.append("};");
        resultado.append("};");
        resultado.append("function pintarGrid(url,name,columnNumber,columnHeader,table,obj,id,idnumber,countid,urlError,functionGrupoRemonteInverso) {");
        resultado.append("var actionGrid= url.substring(url.indexOf(\"/\")+1);");
        resultado.append("actionGrid = actionGrid.substring(actionGrid.indexOf(\"/\")+1);");
        resultado.append("if (findSecurityElement(document.getElementById(\"actions\").value,actionGrid)) {");
        resultado.append("table.setURL(url);");
        resultado.append("table.setAsync(true);");
        resultado.append("table.request();");
        resultado.append("obj.setId(name);");
        resultado.append("table.response1 = table.response;");
        resultado.append("table.response = function (data) {");
        resultado.append("if (data == \"ERROR\") {");
        resultado.append("window.location=urlError;");
        resultado.append("} else {");
        resultado.append("this.response1(data);");
        resultado.append("}");
        resultado.append("};");
        resultado.append("obj.setColumnCount(columnNumber);");
        resultado.append("obj.setHeaderText(columnHeader);");
        resultado.append("obj.setSelectorVisible(true);");
        resultado.append("obj.setSelectorWidth(25);");
        resultado.append("obj.setCellModel(table);");
        resultado.append("obj.setVirtualMode(false);");
        resultado.append("obj.setCellTooltip(function(col, row){return this.getCellText(col, row)});");
        resultado.append("obj.setSelectionMode(\"multi-row\");");
        resultado.append("obj.onSelectedRowsChanged = function(rowIndicesArray){");
        resultado.append("var count = countSelectRows(rowIndicesArray);");
        resultado.append("if (document.getElementById(\"deleteButton\") != null)");
        resultado.append("document.getElementById(\"deleteButton\").disabled = false;");
        resultado.append("document.getElementById(\"padreValores\").value = rowIndicesArray;");
        resultado.append("if (count == 0) {");
        resultado.append("if (document.getElementById(\"deleteButton\") != null)");
        resultado.append("document.getElementById(\"deleteButton\").disabled = true;");
        resultado.append("}");
        resultado.append("if (count == 1) {");
        resultado.append("if (document.getElementById(\"updateClicked\") != null)");
        resultado.append("document.getElementById(\"updateClicked\").disabled=false;");
        resultado.append("if (document.getElementById(\"detalleClicked\") != null)");
        resultado.append("document.getElementById(\"detalleClicked\").disabled=false;");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("document.getElementById(id[x]).value =this.getCellText(idnumber[x],rowIndicesArray);");
        resultado.append("}");
        resultado.append("} else {");
        resultado.append("if (document.getElementById(\"updateClicked\") != null)");
        resultado.append("document.getElementById(\"updateClicked\").disabled=true;");
        resultado.append("if (document.getElementById(\"detalleClicked\") != null)");
        resultado.append("document.getElementById(\"detalleClicked\").disabled=true;");
        resultado.append("var str = \"\" + rowIndicesArray;");
        resultado.append("var count = new Array();");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("count[x]=\"\";");
        resultado.append("}");
        resultado.append("var posicion = 0;");
        resultado.append("while (str!= \"\") {");
        resultado.append("posicion = str.indexOf(\",\");");
        resultado.append("if (posicion == -1) {");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("if (count[x]==\"\") {");
        resultado.append("count[x] = this.getCellText(idnumber[x],str);");
        resultado.append("} else {");
        resultado.append("count[x] = count[x] + \",\" + this.getCellText(idnumber[x],str);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("str = \"\";");
        resultado.append("} else {");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("if (count[x]==\"\") {");
        resultado.append("count[x] = this.getCellText(idnumber[x],str.substring(0,posicion));");
        resultado.append("} else {");
        resultado.append("count[x] = count[x] + \",\" + this.getCellText(idnumber[x],str.substring(0,posicion));");
        resultado.append("}");
        resultado.append("}");
        resultado.append("str = str.substring(posicion+1);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("document.getElementById(id[x]).value = count[x];");
        resultado.append("}");
        resultado.append("}");
        resultado.append("for (x=0;x<countid;x++) {");
        resultado.append("document.getElementById(id[x] + \"_varios\").value =document.getElementById(id[x]).value;");
        resultado.append("}");
        resultado.append("if (document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\") {");
        resultado.append("for(var j=0;j<functionGrupoRemonteInverso.length;j++){");
        resultado.append("eval(functionGrupoRemonteInverso[j]);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("document.write(obj);");
        resultado.append("};");
        resultado.append("};");
        resultado.append("function pintarGrupoRemonteInverso(table,obj,url) {");
        resultado.append("var actionGrid= url.substring(url.indexOf(\"/\")+1);");
        resultado.append("actionGrid = actionGrid.substring(actionGrid.indexOf(\"/\")+1,actionGrid.indexOf(\"?\"));");
        resultado.append("if (findSecurityElement(document.getElementById(\"actions\").value,actionGrid)) {");
        resultado.append("table.setURL(url);");
        resultado.append("table.request();");
        resultado.append("obj.refresh();");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function del (id,form,numberkey) {");
        resultado.append("var entrar = confirm(\"\277Realmente desea borrar los elementos seleccionados?\");");
        resultado.append("if (entrar) {");
        resultado.append("document.getElementById(\"deleteClicked\").value = \"Delete\";");
        resultado.append("for (x=0;x<numberkey;x++) {");
        resultado.append("document.getElementById(id[x] + \"_varios\").value = document.getElementById(id[x]).value;");
        resultado.append("}");
        resultado.append("form.submit();");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function countSelectRows(rowIndicesArray){");
        resultado.append("var str = \"\" + rowIndicesArray;");
        resultado.append("var count = 0;");
        resultado.append("var posicion = 0;");
        resultado.append("while (str!= \"\") {");
        resultado.append("count = count + 1;");
        resultado.append("posicion = str.indexOf(\",\");");
        resultado.append("if (posicion == -1) {");
        resultado.append("str = \"\";");
        resultado.append("}");
        resultado.append("else {");
        resultado.append("str = str.substring(posicion+1);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("return count;");
        resultado.append("};");
        resultado.append("function pintarInitialTab(tab,name,values) {");
        resultado.append("tab.setId(name);");
        resultado.append("tab.setItemText(values);");
        resultado.append("tab.setItemCount(values.length);");
        resultado.append("document.write(tab);");
        resultado.append("};");
        resultado.append("function pintarInitialSelect(tab,name,divs,values,actionsTab) {");
        resultado.append("var valuesTab = new Array();");
        resultado.append("var actionsSecurity = document.getElementById(\"actions\").value;");
        resultado.append("var countTab=0;");
        resultado.append("for(var j=0;j<actionsTab.length;j++){");
        resultado.append("if (findSecurityElement(actionsSecurity,actionsTab[j])) {");
        resultado.append("valuesTab[countTab] = values[j];");
        resultado.append("countTab=countTab+1;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("if (countTab>0) {");
        resultado.append("tab.setId(name);");
        resultado.append("tab.setItemText(valuesTab);");
        resultado.append("tab.setItemCount(countTab);");
        resultado.append("tab.setItemValue(divs);");
        resultado.append("tab.setSelectedItems([0]);");
        resultado.append("document.write(tab);");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function pintarFinalSelect(tab,key,numberkey,divOriginal,divDetalle,padre) {");
        resultado.append("tab.onSelectedItemsChanged = function(selected){");
        resultado.append("var seleccionado = false;");
        resultado.append("if ((selected >0) && (document.getElementById(\"hasPadre\").value==\"true\") && (this.getItemValue(selected[0]).indexOf(\"div\")==-1)) {");
        resultado.append("var url = \"\";");
        resultado.append("var index = selected[0];");
        resultado.append("var value = this.getItemValue(index);");
        resultado.append("for (x=0;x<numberkey;x++) {");
        resultado.append("if (((document.getElementById(key[x]).value.indexOf(\",\"))== -1) & (document.getElementById(key[x]).value!=\"\")) {");
        resultado.append("if (index==x+1) {");
        resultado.append("seleccionado = true;");
        resultado.append("if (url == \"\") {");
        resultado.append("url = value + \"?key=\" + document.getElementById(key[x]).value + \"&padre=\" + padre");
        resultado.append("} else {");
        resultado.append("url = url + \"|\" + document.getElementById(key[x]).value;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("} else {");
        resultado.append("seleccionado = false;");
        resultado.append("x = numberkey;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("if (seleccionado) {");
        resultado.append("window.status = index + \": \" + value;");
        resultado.append("var http = new AW.HTTP.Request;");
        resultado.append("http.setURL(url);");
        resultado.append("http.response = function(text){");
        resultado.append("text = clean(replaceAll(text,\"\\\"\",\"'\"));");
        resultado.append("document.getElementById(divDetalle).innerHTML = text;");
        resultado.append("};");
        resultado.append("http.request();");
        resultado.append("var y = 1;");
        resultado.append("while ((document.getElementById(\"div\"+y))!= null) {");
        resultado.append("document.getElementById(\"div\"+y).style.display =\"none\";");
        resultado.append("y = y+1;");
        resultado.append("}");
        resultado.append("document.getElementById(divDetalle).style.display =\"block\";");
        resultado.append("}");
        resultado.append("else {");
        resultado.append("alert(\"Los Detalles del Padre solo se pueden ver cuando se selecciona un elemento\");");
        resultado.append("selected = 0;");
        resultado.append("tab.setSelectedItems([0]);");
        resultado.append("}");
        resultado.append("} else {");
        resultado.append("for (x=0;x<numberkey;x++) {");
        resultado.append("if ((document.getElementById(key[x]).value!= -1) && (document.getElementById(key[x]).value!=\"\")) {");
        resultado.append("seleccionado = true;");
        resultado.append("} else {");
        resultado.append("seleccionado = false;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("if ((seleccionado)||(selected ==0)) {");
        resultado.append("var i, divs = document.getElementById(\"myContent\").childNodes;");
        resultado.append("for(i=0; i<divs.length;i++){");
        resultado.append("if (divs[i].style) {");
        resultado.append("divs[i].style.display = \"none\";");
        resultado.append("}");
        resultado.append("}");
        resultado.append("var index = selected[0];");
        resultado.append("var value = this.getItemValue(index);");
        resultado.append("document.getElementById(value).style.display = \"block\";");
        resultado.append("} else {");
        resultado.append("alert(\"Se debe seleccionar un elemento del grid para poder visualizar sus datos asociados\");");
        resultado.append("selected = 0;");
        resultado.append("tab.setSelectedItems([0]);");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("tab.setSelectedItems([0]);");
        resultado.append("};");
        resultado.append("function findSecurityElement (security,element) {");
        resultado.append("return (security.indexOf(element)>-1);");
        resultado.append("};");
        resultado.append("function replaceAll(text, strA, strB) {");
        resultado.append("while ( text.indexOf(strA) != -1)    {");
        resultado.append("text = text.replace(strA,strB);");
        resultado.append("}");
        resultado.append("return text;");
        resultado.append("};");
        resultado.append("function clean(text) {");
        resultado.append("text = text.replace(\"</form>\",\"\");");
        resultado.append("text = text.replace(\"height=460\",\"height=400\");");
        resultado.append("return text.substring(text.indexOf(\"<TABLE\"));");
        resultado.append("};");
        resultado.append("function comboText(text) {");
        resultado.append("var value = new Array();");
        resultado.append("var index = 0;");
        resultado.append("var count = 1;");
        resultado.append("while (text.indexOf(\"|\") != -1)   {");
        resultado.append("if (!(count % 2)) {");
        resultado.append("value[index] = text.substring(0,text.indexOf(\"|\"));");
        resultado.append("index = index + 1;");
        resultado.append("}");
        resultado.append("text = text.substring(text.indexOf(\"|\")+1);");
        resultado.append("count = count +1;");
        resultado.append("}");
        resultado.append("value[index] = text;");
        resultado.append("return value;");
        resultado.append("};");
        resultado.append("function comboValue(text) {");
        resultado.append("var value = new Array();");
        resultado.append("var index = 0;");
        resultado.append("var count = 1;");
        resultado.append("while (text.indexOf(\"|\") != -1)   {");
        resultado.append("if (count % 2) {");
        resultado.append("value[index] = text.substring(0,text.indexOf(\"|\"));");
        resultado.append("index = index + 1;");
        resultado.append("}");
        resultado.append("text = text.substring(text.indexOf(\"|\")+1);");
        resultado.append("count = count +1;");
        resultado.append("}");
        resultado.append("value[index] = text;");
        resultado.append("return value;");
        resultado.append("};");
        resultado.append("function comboCount(text) {");
        resultado.append("var count = 1;");
        resultado.append("while (text.indexOf(\"|\") != -1)   {");
        resultado.append("text = text.substring(text.indexOf(\"|\")+1);");
        resultado.append("count = count +1;");
        resultado.append("}");
        resultado.append("return count/2;");
        resultado.append("};");
        resultado.append("function create(obj,url) {");
        resultado.append("var http = new AW.HTTP.Request;");
        resultado.append("http.setURL(url);");
        resultado.append("http.response = function(text){");
        resultado.append("obj.setItemText(comboText(text));");
        resultado.append("obj.setItemValue(comboValue(text));");
        resultado.append("obj.setItemCount(comboCount(text));");
        resultado.append("};");
        resultado.append("http.request();");
        resultado.append("obj.refresh();");
        resultado.append("};");
        resultado.append("function refresh (obj,url) {");
        resultado.append("var http = new AW.HTTP.Request;");
        resultado.append("http.setURL(url);");
        resultado.append("http.response = function(text){");
        resultado.append("obj.setItemText(comboText(text));");
        resultado.append("obj.setItemValue(comboValue(text));");
        resultado.append("obj.setItemCount(comboCount(text));");
        resultado.append("};");
        resultado.append("http.request();");
        resultado.append("obj.refresh();");
        resultado.append("};");
        resultado.append("function pintarList (name,obj) {");
        resultado.append("obj.setId(name);");
        resultado.append("obj.setClass(\"flow\", \"vertical\");");
        resultado.append("obj.setSelectionMode(\"multi\");");
        resultado.append("obj.setItemTooltip(obj.getItemText());");
        resultado.append("document.write(obj);");
        resultado.append("};");
        resultado.append("function refreshList (url,obj) {");
        resultado.append("var http = new AW.HTTP.Request;");
        resultado.append("http.setURL(url);");
        resultado.append("http.response = function(text){");
        resultado.append("obj.clear();");
        resultado.append("obj.setItemText(comboText(text));");
        resultado.append("obj.setItemValue(comboValue(text));");
        resultado.append("obj.setItemCount(comboCount(text));");
        resultado.append("obj.refresh();");
        resultado.append("};");
        resultado.append("http.request();");
        resultado.append("};");
        resultado.append("function pintarComplementoList (obj,elementText,elementValue) {");
        resultado.append("obj.onSelectedItemsChanged = function(array){");
        resultado.append("var i = 0;");
        resultado.append("elementText.value=\"\";");
        resultado.append("elementValue.value=\"\";");
        resultado.append("for (i=0;i<array.length;i++) {");
        resultado.append("if (elementText.value != \"\") {");
        resultado.append("elementText.value = elementText.value + \",\";");
        resultado.append("}");
        resultado.append("if (elementValue.value != \"\") {");
        resultado.append("elementValue.value = elementValue.value + \",\";");
        resultado.append("}");
        resultado.append("elementText.value = elementText.value + obj.getItemText(array[i]);");
        resultado.append("elementValue.value = elementValue.value + obj.getItemValue(array[i]);");
        resultado.append("}");
        resultado.append("};");
        resultado.append("};");
        resultado.append("function refreshDataSeleccionadoList (texto,valores,obj)  {");
        resultado.append("var textoAuxiliar = texto.value;");
        resultado.append("var valoresAuxiliar = valores.value;");
        resultado.append("var textArray = new Array();");
        resultado.append("var valueArray = new Array();");
        resultado.append("var index = 0;");
        resultado.append("while (textoAuxiliar.indexOf(\",\") != -1)   {");
        resultado.append("textArray[index] = textoAuxiliar.substring(0,textoAuxiliar.indexOf(\",\"));");
        resultado.append("index = index + 1;");
        resultado.append("textoAuxiliar = textoAuxiliar.substring(textoAuxiliar.indexOf(\",\")+1);");
        resultado.append("}");
        resultado.append("textArray[index] = textoAuxiliar;");
        resultado.append("obj.setItemText(textArray);");
        resultado.append("index = 0;");
        resultado.append("while (valoresAuxiliar.indexOf(\",\") != -1)   {");
        resultado.append("valueArray[index] = valoresAuxiliar.substring(0,valoresAuxiliar.indexOf(\",\"));");
        resultado.append("index = index + 1;");
        resultado.append("valoresAuxiliar = valoresAuxiliar.substring(valoresAuxiliar.indexOf(\",\")+1);");
        resultado.append("}");
        resultado.append("valueArray[index] = valoresAuxiliar;");
        resultado.append("obj.setItemValue(valueArray);");
        resultado.append("obj.setItemCount(index+1);");
        resultado.append("obj.refresh();");
        resultado.append("};");
        resultado.append("function avanzarGrid(obj,offset) {");
        resultado.append("var x = obj.getRowOffset();");
        resultado.append("var total = document.getElementById(\"total\").value.substring(document.getElementById(\"total\").value.indexOf(\"/\")+2);");
        resultado.append("if ((x+offset)<total) {");
        resultado.append("obj.setRowOffset(x+offset);");
        resultado.append("var inicio= (x+1)+offset;");
        resultado.append("var fin = (x+offset)+offset;");
        resultado.append("if (fin>total) {");
        resultado.append("fin = total;");
        resultado.append("}");
        resultado.append("document.getElementById(\"total\").value = inicio + \" - \" + fin + \" / \" + total;");
        resultado.append("document.getElementById(\"total\").size = document.getElementById(\"total\").value.length-3;");
        resultado.append("obj.getRowsTemplate().refresh();");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function retrocederGrid(obj,offset) {");
        resultado.append("var x = obj.getRowOffset();");
        resultado.append("if (x>0) {");
        resultado.append("obj.setRowOffset(x-offset);");
        resultado.append("var inicio= (x+1)-offset;");
        resultado.append("var fin = x;");
        resultado.append("var total = document.getElementById(\"total\").value.substring(document.getElementById(\"total\").value.indexOf(\"/\")+2);");
        resultado.append("document.getElementById(\"total\").value = inicio + \" - \" + fin + \" / \" + total;");
        resultado.append("document.getElementById(\"total\").size = document.getElementById(\"total\").value.length-3;");
        resultado.append("obj.getRowsTemplate().refresh();");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function avanzarSQLGrid(obj,table,offset,url,name,remonte,remonteField) {");
        resultado.append("var firstElement = parseInt(document.getElementById(\"firstItem\"+name).value);");
        resultado.append("var lastElement = firstElement + offset -1;");
        resultado.append("var total = document.getElementById(\"total\"+name).value.substring(document.getElementById(\"total\"+name).value.indexOf(\"/\")+2);");
        resultado.append("if (firstElement<=total) {");
        resultado.append("var urlDefinitiva=\"\";");
        resultado.append("if (lastElement <= total) {");
        resultado.append("if ((remonte!=\"\") && (remonteField!=\"\")) {");
        resultado.append("urlDefinitiva = url + \"?\"+remonte+\"=\" + document.getElementById(remonteField).value + \"&firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("} else { ");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("}");
        resultado.append("} else { ");
        resultado.append("if ((remonte!=\"\") && (remonteField!=\"\")) {");
        resultado.append("urlDefinitiva = url + \"?\"+remonte+\"=\" + document.getElementById(remonteField).value + \"&firstElement=\" + firstElement + \"&lastElement=\" + total+ \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("} else { ");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + total+\"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("table.setURL(urlDefinitiva);");
        resultado.append("table.request();");
        resultado.append("var nuevoTotal = \"\";");
        resultado.append("if (lastElement <= total) {");
        resultado.append("nuevoTotal = firstElement + \" - \" + lastElement + \" / \" + total;");
        resultado.append("} else {");
        resultado.append("nuevoTotal = firstElement + \" - \" + total + \" / \" + total;");
        resultado.append("}");
        resultado.append("document.getElementById(\"firstItem\"+name).value = lastElement+1;");
        resultado.append("obj.getRowsTemplate().refresh();");
        resultado.append("document.getElementById(\"total\"+name).value = nuevoTotal;");
        resultado.append("document.getElementById(\"total\"+name).size = document.getElementById(\"total\"+name).value.length-3;");
        resultado.append("if (document.getElementById(\"preferredOrder\"+name).value != -1) {");
        resultado.append("var direction = document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("obj.setSortDirection(direction, document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.setSortColumn(document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.getHeadersTemplate().refresh();");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function retrocederSQLGrid(obj,table,offset,url,name,remonte,remonteField) {");
        resultado.append("var lastElement = parseInt(document.getElementById(\"firstItem\"+name).value)-offset - 1;");
        resultado.append("var firstElement = lastElement - offset+1;");
        resultado.append("var total = document.getElementById(\"total\"+name).value.substring(document.getElementById(\"total\"+name).value.indexOf(\"/\")+2);");
        resultado.append("if (firstElement >=0) {");
        resultado.append("var urlDefinitiva=\"\";");
        resultado.append("if ((remonte!=\"\") && (remonteField!=\"\")) {");
        resultado.append("urlDefinitiva = url + \"?\"+remonte+\"=\" + document.getElementById(remonteField).value + \"&firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("}");
        resultado.append("table.setURL(urlDefinitiva);");
        resultado.append("table.request();");
        resultado.append("var nuevoTotal = firstElement + \" - \" + lastElement + \" / \" + total;");
        resultado.append("document.getElementById(\"firstItem\"+name).value = lastElement+1;");
        resultado.append("obj.getRowsTemplate().refresh();");
        resultado.append("document.getElementById(\"total\"+name).value = nuevoTotal;");
        resultado.append("document.getElementById(\"total\"+name).size = document.getElementById(\"total\"+name).value.length-3;");
        resultado.append("if (document.getElementById(\"preferredOrder\"+name).value != -1) {");
        resultado.append("var direction = document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("obj.setSortDirection(direction, document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.setSortColumn(document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.getHeadersTemplate().refresh();");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function paginacionContarSQLGR (actionCount,remonte,remonteField,offset,name) {");
        resultado.append("var http = new AW.HTTP.Request;");
        resultado.append("http.setURL(actionCount + \"?\" + remonte + \"=\"+ document.getElementById(remonteField).value);");
        resultado.append("http.response = function(text){");
        resultado.append("if (offset <= text) {");
        resultado.append("document.getElementById(\"total\" + name).value = \"1 - \"+ offset +\" / \" + text;");
        resultado.append("document.getElementById(\"total\" + name).size = document.getElementById(\"total\" + name).value.length-3;");
        resultado.append("} else {");
        resultado.append("if (text != \"0\") {");
        resultado.append("document.getElementById(\"total\" + name).value  = \"1 - \" + text + \" / \" + text;");
        resultado.append("} else {");
        resultado.append("document.getElementById(\"total\" + name).value = \"0 - 0 / \" + text;");
        resultado.append("}");
        resultado.append("document.getElementById(\"total\" + name).size = document.getElementById(\"total\" + name).value.length-3;");
        resultado.append("}");
        resultado.append("};");
        resultado.append("http.request();");
        resultado.append("document.getElementById(\"firstItem\" + name).value = offset + 1;");
        resultado.append("};");
        resultado.append("function refreshOrder(table,obj,offset,name,url,index) {");
        resultado.append("var firstElement = parseInt(document.getElementById(\"firstItem\" + name).value);");
        resultado.append("var lastElement = 0;");
        resultado.append("var direction = obj.getSortDirection(index);");
        resultado.append("if (direction && direction != \"descending\" ){");
        resultado.append("direction = \"descending\"; ");
        resultado.append("} else {");
        resultado.append("direction = \"ascending\";");
        resultado.append("}");
        resultado.append("document.getElementById(\"orderDirection\"+name).value=direction;");
        resultado.append("document.getElementById(\"preferredOrder\"+name).value=index;");
        resultado.append("if (firstElement > 0) {");
        resultado.append("lastElement = firstElement -1;");
        resultado.append("firstElement = lastElement - offset+1;");
        resultado.append("}");
        resultado.append("var total = document.getElementById(\"total\"+name).value.substring(document.getElementById(\"total\"+name).value.indexOf(\"/\")+2);");
        resultado.append("var urlDefinitiva=\"\";");
        resultado.append("if (lastElement <= total) {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + direction;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + total + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + direction;");
        resultado.append("}");
        resultado.append("obj.clearRowModel();");
        resultado.append("table.setURL(urlDefinitiva);");
        resultado.append("table.setAsync(false);");
        resultado.append("table.request();");
        resultado.append("obj.getRowTemplate().refresh();");
        resultado.append("obj.setSortDirection(direction, index);");
        resultado.append("obj.setSortColumn(index);");
        resultado.append("obj.getHeadersTemplate().refresh();");
        resultado.append("};");
        resultado.append("function refreshOrderGR (table,obj,offset,name,url,index,nameGR) {");
        resultado.append("var firstElement = \"\";");
        resultado.append("if ((document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\")&& (document.getElementById(name).value != \"\")) {");
        resultado.append("firstElement = parseInt(document.getElementById(\"firstItem\" + nameGR).value);");
        resultado.append("} else {");
        resultado.append("firstElement = parseInt(document.getElementById(\"firstItem\" + name).value);");
        resultado.append("}");
        resultado.append("var lastElement = 0;");
        resultado.append("var direction = obj.getSortDirection(index);");
        resultado.append("if (direction && direction != \"descending\" ) {");
        resultado.append("direction = \"descending\";");
        resultado.append("} else {");
        resultado.append("direction = \"ascending\";");
        resultado.append("}");
        resultado.append("if ((document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\")&& (document.getElementById(name).value != \"\")) {");
        resultado.append("document.getElementById(\"orderDirection\"+nameGR).value=direction;");
        resultado.append("document.getElementById(\"preferredOrder\"+nameGR).value=index;");
        resultado.append("} else {");
        resultado.append("document.getElementById(\"orderDirection\"+name).value=direction;");
        resultado.append("document.getElementById(\"preferredOrder\"+name).value=index;");
        resultado.append("}");
        resultado.append("if (firstElement > 0) {");
        resultado.append("lastElement = firstElement -1;");
        resultado.append("firstElement = lastElement - offset+1;");
        resultado.append("}");
        resultado.append("var total = \"\";");
        resultado.append("if ((document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\")&& (document.getElementById(name).value != \"\")) {");
        resultado.append("var total = document.getElementById(\"total\"+nameGR).value.substring(document.getElementById(\"total\"+nameGR).value.indexOf(\"/\")+2);");
        resultado.append("} else {");
        resultado.append("var total = document.getElementById(\"total\"+name).value.substring(document.getElementById(\"total\"+name).value.indexOf(\"/\")+2);");
        resultado.append("}");
        resultado.append("var urlDefinitiva=\"\";");
        resultado.append("if ((document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\")&& (document.getElementById(name).value != \"\")) {");
        resultado.append("if (lastElement <= total) {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+nameGR).value + \"&orderDirection=\" + direction;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + total + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+nameGR).value + \"&orderDirection=\" + direction;");
        resultado.append("}");
        resultado.append("} else {");
        resultado.append("if (lastElement <= total) {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + direction;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + total + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + direction;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("if ((document.getElementById(\"hasGrupoRemonteInverso\").value == \"true\")&& (document.getElementById(name).value != \"\")) {");
        resultado.append("urlDefinitiva= urlDefinitiva + \"&\" + document.getElementById(name).value + \"=\" + document.getElementById(document.getElementById(name+\"_varios\").value).value;");
        resultado.append("}");
        resultado.append("obj.clearRowModel();");
        resultado.append("table.setURL(urlDefinitiva);");
        resultado.append("table.setAsync(false);");
        resultado.append("table.request();");
        resultado.append("obj.getRowTemplate().refresh();");
        resultado.append("obj.setSortDirection(direction, index);");
        resultado.append("obj.setSortColumn(index);");
        resultado.append("obj.getHeadersTemplate().refresh();");
        resultado.append("};");
        resultado.append("function avanzarSQLFinalGrid(obj,table,offset,url,name,remonte,remonteField) {");
        resultado.append("var firstElement = parseInt(document.getElementById(\"firstItem\"+name).value);");
        resultado.append("var lastElement = firstElement + offset -1;");
        resultado.append("var total = document.getElementById(\"total\"+name).value.substring(document.getElementById(\"total\"+name).value.indexOf(\"/\")+2);");
        resultado.append("if (firstElement<=total) {");
        resultado.append("var mod = total % offset;");
        resultado.append("if (mod == 0) {");
        resultado.append("firstElement = total - offset +1;");
        resultado.append("} else {");
        resultado.append("firstElement = total - mod +1;");
        resultado.append("}");
        resultado.append("lastElement = firstElement + offset -1;");
        resultado.append("var urlDefinitiva=\"\";");
        resultado.append("if (lastElement <= total) {");
        resultado.append("if ((remonte!=\"\") && (remonteField!=\"\")) {");
        resultado.append("urlDefinitiva = url + \"?\"+remonte+\"=\" + document.getElementById(remonteField).value + \"&firstElement=\" + firstElement +\t\"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("}");
        resultado.append("} else {");
        resultado.append("if ((remonte!=\"\") && (remonteField!=\"\")) {");
        resultado.append("urlDefinitiva = url + \"?\"+remonte+ \"=\" + document.getElementById(remonteField).value + \"&firstElement=\" + firstElement + \"&lastElement=\" + total+ \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + total+ \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("}");
        resultado.append("}");
        resultado.append("table.setURL(urlDefinitiva);");
        resultado.append("table.request();");
        resultado.append("var nuevoTotal = \"\";");
        resultado.append("if (lastElement <= total) {");
        resultado.append("nuevoTotal = firstElement + \" - \" + lastElement + \" / \" + total;");
        resultado.append("} else {");
        resultado.append("nuevoTotal = firstElement + \" - \" + total + \" / \" + total;");
        resultado.append("}");
        resultado.append("document.getElementById(\"firstItem\"+name).value = lastElement+1;");
        resultado.append("obj.getRowsTemplate().refresh();");
        resultado.append("document.getElementById(\"total\"+name).value = nuevoTotal;");
        resultado.append("document.getElementById(\"total\"+name).size = document.getElementById(\"total\"+name).value.length-3;");
        resultado.append("if (document.getElementById(\"preferredOrder\"+name).value != -1) {");
        resultado.append("var direction = document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("obj.setSortDirection(direction, document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.setSortColumn(document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.getHeadersTemplate().refresh();");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("function retrocederSQLPrincipioGrid(obj,table,offset,url,name,remonte,remonteField) {");
        resultado.append("var firstElementOriginal = parseInt(document.getElementById(\"firstItem\"+name).value);");
        resultado.append("if (firstElementOriginal >1) {");
        resultado.append("var lastElement = offset;");
        resultado.append("var firstElement = 1;");
        resultado.append("var total = document.getElementById(\"total\"+name).value.substring(document.getElementById(\"total\"+name).value.indexOf(\"/\")+2);");
        resultado.append("var urlDefinitiva=\"\";");
        resultado.append("if ((remonte!=\"\") && (remonteField!=\"\")) {");
        resultado.append("urlDefinitiva = url + \"?\"+remonte+ \"=\" + document.getElementById(remonteField).value + \"&firstElement=\" + firstElement + \"&lastElement=\" + lastElement +  \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("} else {");
        resultado.append("urlDefinitiva=url + \"?firstElement=\" + firstElement + \"&lastElement=\" + lastElement + \"&orderPosition=\" + document.getElementById(\"preferredOrder\"+name).value + \"&orderDirection=\" + document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("}");
        resultado.append("table.setURL(urlDefinitiva);");
        resultado.append("table.request();");
        resultado.append("var nuevoTotal = firstElement + \" - \" + lastElement + \" / \" + total;");
        resultado.append("document.getElementById(\"firstItem\"+name).value = lastElement+1;");
        resultado.append("obj.getRowsTemplate().refresh();");
        resultado.append("document.getElementById(\"total\"+name).value = nuevoTotal;");
        resultado.append("document.getElementById(\"total\"+name).size = document.getElementById(\"total\"+name).value.length-3;");
        resultado.append("if (document.getElementById(\"preferredOrder\"+name).value != -1) {");
        resultado.append("var direction = document.getElementById(\"orderDirection\"+name).value;");
        resultado.append("obj.setSortDirection(direction, document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.setSortColumn(document.getElementById(\"preferredOrder\"+name).value);");
        resultado.append("obj.getHeadersTemplate().refresh();");
        resultado.append("}");
        resultado.append("}");
        resultado.append("};");
        resultado.append("</script>");
        return resultado.toString();
    }

    private static final long serialVersionUID = 0xace6bde6e4391553L;
    static Logger logger;

    static 
    {
        logger = Logger.getLogger(es.ark.web.taglib.FunctionAriTag.class);
    }
}